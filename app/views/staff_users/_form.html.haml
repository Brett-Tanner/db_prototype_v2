-# locals: (areas:, schools:, user:)

:ruby
  area_managements = user.managements.where(manageable_type: 'Area')
  school_managements = user.managements.where(manageable_type: 'School')
  url = user.new_record? ? staff_users_path : staff_user_path(user)

- roles = [['Area Manager', 'area_manager'],
           ['School Manager', 'school_manager'],
           ['Statistician', 'statistician']]

= form_with model: user, url:,
            html: { class: 'card d-grid gap-3 w-50' } do |f|
  = render 'shared/form_errors', resource: user

  = f.hidden_field :address, value: '1-2-3'
  = f.hidden_field :katakana_name, value: 'カタカナ'
  = f.hidden_field :phone, value: '0123456789'
  = f.hidden_field :postcode, value: '1234567'
  = f.hidden_field :prefecture, value: '東京都'

  %div
    = f.label :role, class: 'form-label'
    = f.select :role, roles, {}, class: 'form-select'

  - if school_managements.any?
    .d-grid.gap-3{ 'data-controller': 'fields' }
      %h3 Managed Schools

      = f.fields_for :managements, school_managements do |mf|
        = render 'managements/fields', f: mf, manageables: schools,
                                       managers: [user], type: :school

      %template{ 'data-fields-target': 'template' }
        = f.fields_for :managements, Management.new,
                       child_index: 'CHILD' do |mf|
          = render 'managements/fields', f: mf, manageables: schools,
                                         managers: [user], type: :school
      = button_tag 'Add Managed School',
                   type: 'button',
                   data: { action: 'fields#add' },
                   class: 'btn btn-info w-100'

      .d-none.w-100{ data: { 'fields-target': 'target' } }

  - if area_managements.any?
    .d-grid.gap-3{ 'data-controller': 'fields' }
      %h3 Managed Areas
      = f.fields_for :managements,
                     user.managements.where(manageable_type: 'Area') do |mf|
        = render 'managements/fields', f: mf, manageables: areas,
                                       managers: [user], type: :area

      %template{ 'data-fields-target': 'template' }
        = f.fields_for :managements, Management.new,
                       child_index: 'CHILD' do |mf|
          = render 'managements/fields', f: mf, manageables: areas,
                                         managers: [user], type: :area

      = button_tag 'Add Managed Area',
                   type: 'button',
                   data: { action: 'fields#add' },
                   class: 'btn btn-info w-100'

      .d-none.w-100{ data: { 'fields-target': 'target' } }

  .form-floating
    = f.text_field :name,
                   autofocus: true,
                   class: 'form-control',
                   placeholder: 'Name',
                   required: true
    = f.label :name, class: 'form-label'

  .form-floating
    = f.text_field :email,
                   class: 'form-control',
                   placeholder: 'Email',
                   required: true
    = f.label :email, class: 'form-label'

  .form-floating
    = f.text_field :pin,
                   class: 'form-control',
                   placeholder: 'PIN',
                   maxlength: 4,
                   required: true
    = f.label :pin, 'PIN', class: 'form-label'

  = render('users/password_fields', f:, user:) if user.new_record?
  = render('users/allowed_ips', f:, user:)

  = f.submit class: 'btn btn-primary'
