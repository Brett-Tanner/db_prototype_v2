:ruby
  all_registered_slots = @child.time_slots.where(event_id: @event.id).order(start_time: :asc)
  registered_slots = @child.time_slots.morning.where(event_id: @event.id).order(start_time: :asc)
  unregistered_slots = @event_slots.where.not(id: registered_slots.ids)

  active_invoice = @all_invoices.find { |i| i.in_ss == false }

  registrations = @all_invoices.reduce([]) { |array, invoice| array + invoice.registrations }
  adjustments = @all_invoices.reduce([]) { |array, inv| array + inv.adjustments }

  slots_in_ss = @all_invoices.select(&:in_ss)
                             .reduce([]) { |array, invoice| array + invoice.slot_regs }
  confirmed_opt_regs = @all_invoices.select(&:in_ss)
                                .reduce([]) { |array, invoice| array + invoice.opt_regs }

  stimulus_actions = 'register:toggle->invoice#change ' \
                     'invoice:add@window->price#calculate ' \
                     'invoice:remove@window->price#calculate'

  others_cost = @child.parent.invoices.where(event_id: @event.id)
                      .where.not(child_id: @child.id)
                      .reduce(0) { |sum, invoice| sum + invoice.total_cost }

%main{ class: 'd-flex flex-column justify-content-start align-items-start text-start bg-white',
       data: { controller: 'invoice price',
               action: stimulus_actions,
               'price-member-price-value': @member_prices.courses.to_json,
               'price-non-member-price-value': @non_member_prices.courses.to_json,
               'price-other-cost-value': others_cost || 0,
               'price-event-name-value': @event.name },
       id: 'event-show' }

  = render 'invoices/registration_page/header',
           child: @child, siblings: @siblings, event: @event

  = render 'invoices/registration_page/parent_messages',
           child: @child, siblings: @siblings, event: @event

  = render 'invoices/registration_page/event_options',
           child: @child, siblings: @siblings, confirmed_opt_regs:,
           event: @event, registrations:

  .accordion.w-100#accordionEvent
    .accordion-item
      %h2.accordion-header
        %button{ aria: { expanded: 'false', controls: 'event-collapseOne' },
                 class: 'accordion-button collapsed text-bg-primary',
                 data: { 'bs-toggle': 'collapse',
                         'bs-target': '#event-collapseOne' },
                 type: 'button' }
          = t('.more_info')

      .accordion-collapse.collapse#event-collapseOne
        .accordion-body
          = render 'invoices/registration_page/more_info',
                   adjustments:, event: @event, child: @child,
                   price_list: @child.member? ? @member_prices : @non_member_prices

    .accordion-item
      %h2.accordion-header
        %button{ aria: { expanded: 'true', controls: 'panelsStayOpen-collapseTwo' },
                 class: 'accordion-button text-bg-primary',
                 data: { 'bs-toggle': 'collapse',
                         'bs-target': '#event-collapseTwo' },
                 type: 'button' }
          = t('.unregistered_slots')
      .accordion-collapse.collapse.show#event-collapseTwo
        .accordion-body
          .d-flex.flex-column.flex-lg-row.flex-lg-wrap.justify-content-lg-around.gap-3
            = render partial: 'time_slots/add_slot',
                     collection: unregistered_slots,
                     locals: { child: @child, registrations:,
                               event: @event, slots_in_ss:, confirmed_opt_regs: }

    .accordion-item
      %h2.accordion-header
        %button{ aria: { expanded: 'false', controls: 'panelsStayOpen-collapseThree' },
                 class: 'accordion-button collapsed text-bg-primary',
                 data: { 'bs-toggle': 'collapse',
                         'bs-target': '#event-collapseThree' },
                 type: 'button' }
          = t('.registered_slots')

      .accordion-collapse.collapse#event-collapseThree
        .accordion-body
          .d-flex.flex-column.flex-lg-row.flex-lg-wrap.justify-content-lg-around.gap-3
            = render partial: 'time_slots/add_slot',
                     collection: registered_slots,
                     locals: { child: @child, registrations:,
                               event: @event, slots_in_ss:, confirmed_opt_regs: }

  = render('invoices/registration_page/price_footer',
           active_invoice:, all_invoices: @all_invoices,
           all_registered_slots:, child: @child, options: @options)

  = turbo_frame_tag "child#{@child.id}invoice#{active_invoice.id}",
                    class: 'modal fade', tabindex: '-1'
