-# locals: (all_invoices:, all_registered_slots:, child:, frame_id:, options:)

:ruby
  num_options = all_invoices.reduce(0) { |sum, i| sum + i.options.size }
  total_cost = all_invoices.reduce(0) { |sum, i| sum + i.total_cost }


%footer.w-100.d-flex.justify-content-center.justify-content-md-evenly.align-items-center.flex-wrap.gap-3.bg-info.p-2.rounded.sticky-bottom#price_bar

  %h2.text-white.fw-bold#total_cost{ data: { 'price-target': 'finalCost' } }
    = t('.total_cost')
    = ':'
    = number_to_currency(total_cost, locale: :ja)

  .d-flex.justify-content-around.gap-2
    #reg_slots
      - all_registered_slots.each do |slot|
        %p.hidden{ 'data-modifier': activity_modifier(slot, @child) }
          = slot.name.concat(slot.morning ? '' : ' (午後)')

    %span.hidden{ data: { 'price-target': 'snackCount',
                         'invoice-target': 'snackCount' } }
      = all_registered_slots.count(&:snack)

    %p.hidden{ data: { 'price-target': 'optCount' } }
      = t('.num_options', num: num_options)

  - all_invoices.each do |invoice|
    - hidden_class = invoice.in_ss ? 'd-none' : ''

    = form_with model: invoice,
      url: confirm_new_invoice_path(new: invoice.new_record?,
                                    rework: true),
                class: "d-flex justify-content-center gap-3 #{hidden_class}",
                data: { 'turbo-frame': frame_id } do |f|
      = f.hidden_field :id
      = f.hidden_field :child_id
      = f.hidden_field :event_id

      .slot_regs.hidden{ data: { 'price-target': 'slotRegs' } }
        = f.fields_for :slot_regs do |slot_f|
          - slot_id = "slot#{slot_f.object.registerable_id}child#{slot_f.object.child_id}"

          %div{ class: "slot_reg child#{slot_f.object.child_id}",
                id: slot_id }
            = slot_f.hidden_field :_destroy, value: 0
            = slot_f.hidden_field :id
            = slot_f.hidden_field :child_id
            = slot_f.hidden_field :registerable_id
            = slot_f.hidden_field :registerable_type

        - unless f.object.in_ss
          %div{ data: { 'invoice-target': 'slotTarget' } }

      .opt_regs.hidden{ data: { 'price-target': 'optRegs' } }
        = f.fields_for :opt_regs do |opt_f|
          - opt_id = "opt#{opt_f.object.registerable_id}child#{opt_f.object.child_id}"

          %div{ class: "opt_reg child#{opt_f.object.child_id}",
                id: opt_id }
            = opt_f.hidden_field :_destroy, value: 0
            = opt_f.hidden_field :id
            = opt_f.hidden_field :child_id
            = opt_f.hidden_field :registerable_id
            = opt_f.hidden_field :registerable_type
            .opt_cost.hidden.registered{ data: { 'price-target': 'optCost' } }
              = options.find { |opt| opt.id == opt_f.object.registerable_id }&.cost || 0

        - unless f.object.in_ss
          %div{ 'data-invoice-target': 'optTarget' }

      %template{ 'data-invoice-target': 'slotTemplate' }
        = f.fields_for :slot_regs, Registration.new,
                       child_index: 'REG_INDEX' do |reg_f|
          .slot_reg.NEW_CLASS{ 'data-new-record': 'true', id: 'NEW_ID' }
            = reg_f.hidden_field :child_id, value: 'NEW_CHILD_ID'
            = reg_f.hidden_field :registerable_id,
                                 value: 'NEW_REGISTERABLE_ID'
            = reg_f.hidden_field :registerable_type, value: 'TimeSlot'

      %template{ 'data-invoice-target': 'optTemplate' }
        = f.fields_for :opt_regs, Registration.new,
                       child_index: 'REG_INDEX' do |reg_f|
          .opt_reg.NEW_CLASS{ 'data-new-record': 'true', id: 'NEW_ID' }
            = reg_f.hidden_field :child_id, value: 'NEW_CHILD_ID'
            = reg_f.hidden_field :registerable_id,
                                 value: 'NEW_REGISTERABLE_ID'
            = reg_f.hidden_field :registerable_type, value: 'Option'

      - unless f.object.in_ss
        = f.submit t('.confirm_changes'),
                   class: 'btn btn-primary w-100',
                   data: { action: 'dialog#open',
                           controller: 'dialog',
                           'dialog-dialog-value': 'invoice-preview',
                           'dialog-frame-value': frame_id,
                           'price-target': 'confirm' }
